/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package as_arvores_somos_nozes_2.Visual;

import as_arvores_somos_nozes_2.ArquivoTXT.ArvereDescadeirada;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author sergy
 */
public class Tela extends javax.swing.JFrame {
    private ArvereDescadeirada arvoreDesbalanceada = new ArvereDescadeirada();
    private Tela instanciaTela;
    public Tela() {
        initComponents();
    }

  public void exibirArvoresGraficamente(TreeMap<String, Integer> arvoreAVL, ArvereDescadeirada arvoreDesbalanceada) {
    // Limpe o JTextArea antes de exibir as árvores
    jTextArea2.setText("");

    // Crie uma árvore de Nozinho a partir do TreeMap arvoreAVLConvertida
    ArvereDescadeirada arvoreAVLConvertida = new ArvereDescadeirada();

    for (Map.Entry<String, Integer> entry : arvoreAVL.entrySet()) {
        String chave = entry.getKey();
        int valor = entry.getValue();
        for (int i = 0; i < valor; i++) {
            arvoreAVLConvertida.insereNaDescadeirada(chave);
        }
    }

    // Exiba a árvore balanceada (TreeMap) de forma gráfica
    jTextArea2.append("Árvore AVL (Balanceada):\n");
    exibirArvoreGraficamente(arvoreAVLConvertida.getRoot(), "", "", true);

    // Exiba a árvore desbalanceada de forma gráfica
    jTextArea2.append("\nÁrvore Desbalanceada:\n");
    exibirArvoreGraficamente(arvoreDesbalanceada.getRoot(), "", "", true);
}


public void exibirArvoreGraficamente(ArvereDescadeirada.Nozinho noAtual, String prefixo, String seta, boolean isRight) {
    if (noAtual != null) {
        jTextArea2.append(prefixo);
        jTextArea2.append(isRight ? "└── " : "├── ");
        jTextArea2.append(noAtual.getData() + "\n");

        // Chamar recursivamente para os nós filho
        exibirArvoreGraficamente(noAtual.getLeft(), prefixo + (isRight ? "    " : "│   "), "├── ", false);
        exibirArvoreGraficamente(noAtual.getRight(), prefixo + (isRight ? "    " : "│   "), "└── ", true);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane1.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
